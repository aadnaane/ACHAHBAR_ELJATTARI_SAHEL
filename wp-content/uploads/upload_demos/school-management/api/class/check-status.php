<?php class UserReadStatusAPI{	public function __construct()	{		add_action('template_redirect', array($this,'redirectMethod'), 1);			}		public function redirectMethod()	{			if($_REQUEST["smgt-json-api"]=='check-status')		{			if(isset($_REQUEST["user_id"]) && $_REQUEST["user_id"]!="")			{				/*var_dump($_POST);				die;*/				$response=$this->check_read_status($_REQUEST);	 			}					if(is_array($response))			{				echo json_encode($response);			}			else			{				header("HTTP/1.1 401 Unauthorized");			}			die();		}		if($_REQUEST["smgt-json-api"]=='unread-list')		{			if(isset($_REQUEST["current_user"]) && $_REQUEST["current_user"]!="")			{				$response=$this->get_unread_list($_REQUEST);	 			}					if(is_array($response))			{				echo json_encode($response);			}			else			{				header("HTTP/1.1 401 Unauthorized");			}			die();		}				//if()	}		public function check_read_status($data)	{		/*var_dump($data);			die;*/		if(!empty($data['type']) && !empty($data['type_id']))		{			$TypeArr = explode(',',$data['type_id']);			/*var_dump("hello");			die;*/			global $wpdb;			$tbl_status = $wpdb->prefix .'smgt_check_status';						$statusdata['type']=$data['type'];			//$statusdata['type_id']=$data['type_id'];			$statusdata['user_id']=$data['user_id'];							foreach($TypeArr as $type_id)			{									$statusdata['type_id']=$type_id;				$result = $wpdb->insert($tbl_status,$statusdata);			} 						if($result)			{				$response['status']=1;					$response['resource']="Record Successfully inserted";				return $response;			}								}		else		{			$error['message']=__("Please Fill All Fields",'school-mgt');			$response['status']=0;			$response['resource']=$error;		}			return $response;		}			   	public function get_unread_list($data)	{		if(!empty($data['current_user']))		{			$TypeList = array("notice",'message','holiday');			$response['status']=1;			foreach($TypeList as $type)			{					global $wpdb;								if($type=='holiday')				{					$tablename = $wpbd->prefix . 'holiday';					$retrieve_holiday = mj_smgt_get_all_data($tablename);					foreach($retrieve_holiday as $holiday)					{						$HolidayStatus = mj_smgt_cheak_type_status($data['current_user'],'holiday',$holiday->holiday_id);												if($HolidayStatus=="Unread")						{							$List['notification_id'] = $holiday->holiday_id;							$List['notification_title'] = $holiday->holiday_title;							$List['message_from']="";							$List['start_date'] = $holiday->date;							$List['end_date'] = $holiday->end_date;							$List['notification_description'] = $holiday->description;							$List['notification_date'] =mj_smgt_convert_date_time($holiday->created_date);							$List['notification_type'] ="holiday";							$listdata[]=$List;						}											}					//$result['holidaylist']=$listdata;					$i++;					} 								if($type=='notice')				{					$userdata = get_userdata($data['current_user']);					$class_id = get_user_meta($userdata->ID,'class_name',true);					$class_section = get_user_meta($userdata->ID,'class_section',true);										//smgt_get_user_notice('student',);										$notice_list_student = get_posts(array(								'post_type' => 'notice',								'posts_per_page' =>3,								'meta_query' =>  array(								'relation' => 'OR',								array(								'key' => 'notice_for',								'value' => 'all',								'compare' => '='								),								array(								'relation' => 'AND',								array(								'key' => 'smgt_class_id',								'value' => $class_id,								'compare' => '=',								),								array(								'key' => 'smgt_section_id',								'value' => $class_section,								'compare' => '=',									)									), 								array(								'relation' => 'AND',								array(								'key' => 'notice_for',								'value' => 'student',								'compare' => '=',								),								array(								'key' => 'smgt_class_id',								'value' => $class_id,								'compare' => '=',									)									),								array(								'relation' => 'AND',								array(								'key' => 'notice_for',								'value' => 'student',								'compare' => '=',								)								)								)								));					/* $NoticePost = get_posts( $notice_list_student ); 					 */					foreach($notice_list_student as $key=>$notice)					{							$noticeStatus = mj_smgt_cheak_type_status($data['current_user'],'notice',$notice->ID);						if($noticeStatus=="Unread")						{														$NoticeData['notification_id']=$notice->ID;							$NoticeData['notification_title']=$notice->post_title;							$NoticeData['message_from']="";							$NoticeData['notification_description']=$notice->post_content;							$NoticeData['start_date']=mj_smgt_getdate_in_input_box(get_post_meta($notice->ID,'start_date',true));							$NoticeData['end_date']=mj_smgt_getdate_in_input_box(get_post_meta($notice->ID,'end_date',true));							$NoticeData['notification_date']=$notice->post_date;							$NoticeData['notification_type'] ="notice";							$StdNotice[] = $NoticeData; 						}					}					//$result['noticelist']=$StdNotice;				} // end of notice type condition 				if($type=='message')				{					$messagedata=mj_smgt_get_inbox_message($data['current_user']);					if(!empty($messagedata))					{						foreach($messagedata as $key=>$message)						{							$msgStatus = mj_smgt_cheak_type_status($data['current_user'],'message',$message->message_id);							if($msgStatus=="Unread")							{								$MessageData['notification_id']=$message->message_id;								$MessageData['message_from']=mj_smgt_get_display_name($message->sender);								$MessageData['notification_title']=$message->subject;								$MessageData['start_date']="";								$MessageData['end_date']="";								$MessageData['notification_description']=$message->message_body;								$MessageData['notification_date']=mj_smgt_convert_date_time($message->date);								$MessageData['notification_type'] ="message";								$ArrMsg[]= $MessageData;							}													}						//$result['messagelist']=$ArrMsg;					}					else					{						$error['message']=__("No Message Found",'school-mgt');						$response['status']=0;						$response['resource']=$error;						return $response;					}										} // end of message type condition 			}			if(empty($listdata) && empty($ArrMsg))			{				$result=$StdNotice;			}			elseif(empty($listdata) && empty($StdNotice))			{				$result=$ArrMsg;			}			elseif(empty($ArrMsg) && empty($StdNotice))			{				$result=$listdata;			}			elseif(empty($listdata))			{				$result=array_merge($StdNotice,$ArrMsg);			}			elseif(empty($StdNotice))			{				$result=array_merge($listdata,$ArrMsg);			}			elseif(empty($ArrMsg))			{				$result=array_merge($listdata,$StdNotice);			}			else			{				$result=array_merge($listdata,$StdNotice,$ArrMsg);			}								usort($result, 'date_compare');				$response['resource']=$result;							return $response;		}		else		{			$error['message']=__("Please Fill All Fields",'school-mgt');			$response['status']=0;			$response['resource']=$error;			return $response;		}	}} ?>